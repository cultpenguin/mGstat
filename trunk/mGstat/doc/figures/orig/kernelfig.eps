%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: ./kernelfig.eps
%%CreationDate: 03/10/2006  10:54:25
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    79   247   549   570
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    79   247   549   570
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  732   499  5645  3872 rc
125 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6921 5185 rf
6 w
0 -3444 1476 0 0 3444 900 779 4 MP
PP
-1476 0 0 -3444 1476 0 0 3444 900 779 5 MP stroke
gs 900 779 1477 3445 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    ffffff fafafa f6f6f6 f2f2f2 eeeeee eaeaea e6e6e6 e2e2e2 dedede dadada 
    d6d6d6 d2d2d2 cecece cacaca c6c6c6 c2c2c2 bebebe bababa b6b6b6 b2b2b2 
    aeaeae aaaaaa a5a5a5 a1a1a1 9d9d9d 999999 959595 919191 8d8d8d 898989 
    858585 818181 7d7d7d 797979 757575 717171 6d6d6d 696969 656565 616161 
    5d5d5d 595959 555555 505050 4c4c4c 484848 444444 404040 3c3c3c 383838 
    343434 303030 2c2c2c 282828 242424 202020 1c1c1c 181818 141414 101010 
    0c0c0c 080808 040404 000000 
  >
] setcolorspace } bdef mwscm
gs np 900 780 mt 0 3444 rl 1476 0 rl 0 -3444 rl cp c np
[1476 0 0 3444 900 780] cc
<< % Image dictionary
  /ImageType 1
  /Width 21 /Height 49
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [21.000000 0 0 49.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
!\Orinc]7*%PAe=$k!=>"TSZ(!!!-#"Ut\E$l9rh(C^ZV"U>5;rX05B"pY;;#n7[T!#6.Y%1<I@"TSQ%
"b-dc%1j0f!'_GB'bLi]$OmLV$k3RO$kX3n*'Y&P)%mGl&.f-U#R^qM&.oEc)&End'G_Q"'bLrc%1`mW
%hTNi)&<ne*?-"?)\Nbq'+brk'+kii)]g"=*A&*G()7Yt%1a!S&.]3](_mf((bH"0'c\52',;,n+VPJ'
',Z3>*#07q!#?In*Z#b3(DQud(De#,*ZZ.7!&ki9(`=>5)&<r8'c%Z+*>o\5)`JWN()n87*#o_4!u_pp
*$$%=()Ihh'c@r3*?>q;(b?LF(EFM;)]9@k#9+X$)'0e=)BB)()BBh>)&aJ6#<s"@)BBhB+<MOS)]p1H
*??&J(Df:D(Dn)4+!DjP+V>k@,9\-M)]0A!!#HRn(a'tI+<N$S+=&*Q(`OD1!%/^+)Bp:J+snT_,pjf[
+<h^E)^d'L'H%c1)':(I)^6LK)'9_6'GW%u(E+;4*[2gR,r6hl,9e0I*?#^q";r-o+WVaP-Rff[-R9lV
+Vl"7IfqnO'ce26+X89\4=;F"+W_OB'c9(F(E+;4*?cUO.i'W[+s@sF*?#_*!#QXj+<;FE.47>-.3KTN
+;Pn5!"]qb*?#qA+sSTR.jH5]*?#q:(D&_H'ce26+X89\4=;F"+W_OB'c9(:)&j>7*?laV.2F?[,U+6P
()n+o!e2")*?#tC,9nKj,pOWY*Z?%;(BQ$#'H%c1)':(I)^6LK)'9_6'GW&E)]]h@+<i!V,pjob+sJ-R
)BBbE!#HRn(a'tI+<N$S+=&*Q(`OD1!"0S[)]g(E,9\3B+X&'R+!)@<(CNGD(E+;7+s7sH/K5cS+rq[B
(Df:@)]X>G)'0e=)BB)()BBh>)&aJ6#6>PW)]g"?(EODE(`jJ6*?H.;'`f0g()n87*#o_4!u_pp*$$%=
()IiI)]KV3*?,k3'dse4)&jS6(`ODQ!#?In*Z#b3(DQud(De#,*ZZ.7!!jAU*$#k0'bV0''+u#n(`aS2
(C2T0)&<s%(_@,e&-`[V%1j?k()[r@*?-"?)\Nbq'+brk'+kii)]g"=*<?ii)&!_s%h/sY%1Ng['b_H#
'EJg_)%mGl&.f-U#R^qM&.oEc)&EoM*#fV)$jm@O$kWmW$OR:S'cS,W!#6.Y%1<I@"TSQ%"V1kH%1j0f
!!X5K#m^\>"pk29%1!.C"UGDD(Btos$k!=>"TSZ(!!!-#"U>8?$l9s;%LVb1!X]DiJ,
~>
gr
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 856  684 mt 
(Kernel for  sgsim_cond_3.par) s
4 w
DO
SO
6 w
 900  779 mt 2376  779 L
 900 4223 mt 2376 4223 L
 900  779 mt  900 4223 L
2376  779 mt 2376 4223 L
 900 4223 mt 2376 4223 L
 900  779 mt  900 4223 L
 900 4223 mt  900 4189 L
 900  779 mt  900  813 L
 867 4369 mt 
(0) s
1462 4223 mt 1462 4189 L
1462  779 mt 1462  813 L
1429 4369 mt 
(2) s
2024 4223 mt 2024 4189 L
2024  779 mt 2024  813 L
1991 4369 mt 
(4) s
 900  779 mt  934  779 L
2376  779 mt 2341  779 L
 799  823 mt 
(0) s
 900 1341 mt  934 1341 L
2376 1341 mt 2341 1341 L
 799 1385 mt 
(2) s
 900 1904 mt  934 1904 L
2376 1904 mt 2341 1904 L
 799 1948 mt 
(4) s
 900 2466 mt  934 2466 L
2376 2466 mt 2341 2466 L
 799 2510 mt 
(6) s
 900 3028 mt  934 3028 L
2376 3028 mt 2341 3028 L
 799 3072 mt 
(8) s
 900 3590 mt  934 3590 L
2376 3590 mt 2341 3590 L
 732 3634 mt 
(10) s
 900 4153 mt  934 4153 L
2376 4153 mt 2341 4153 L
 732 4197 mt 
(12) s
 900  779 mt 2376  779 L
 900 4223 mt 2376 4223 L
 900  779 mt  900 4223 L
2376  779 mt 2376 4223 L
1 sg
0 -3444 1476 0 0 3444 2843 779 4 MP
PP
-1476 0 0 -3444 1476 0 0 3444 2843 779 5 MP stroke
gs 2843 779 1477 3445 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    ffffff fafafa f6f6f6 f2f2f2 eeeeee eaeaea e6e6e6 e2e2e2 dedede dadada 
    d6d6d6 d2d2d2 cecece cacaca c6c6c6 c2c2c2 bebebe bababa b6b6b6 b2b2b2 
    aeaeae aaaaaa a5a5a5 a1a1a1 9d9d9d 999999 959595 919191 8d8d8d 898989 
    858585 818181 7d7d7d 797979 757575 717171 6d6d6d 696969 656565 616161 
    5d5d5d 595959 555555 505050 4c4c4c 484848 444444 404040 3c3c3c 383838 
    343434 303030 2c2c2c 282828 242424 202020 1c1c1c 181818 141414 101010 
    0c0c0c 080808 040404 000000 
  >
] setcolorspace } bdef mwscm
gs np 2843 780 mt 0 3444 rl 1476 0 rl 0 -3444 rl cp c np
[1476 0 0 3444 2843 780] cc
<< % Image dictionary
  /ImageType 1
  /Width 21 /Height 49
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [21.000000 0 0 49.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
!$LY/!'fiN!>$pO!!#7N!!**am/R/A%da5r5OAFO+s$%N!'fiN!>7!O!!#7N!!*0am/R/C%.+#p5OAFO
,TH+N!'fiN!>I'O!!#7N!!*6am/R/E$LIfn5OAFO-5l1N!'fiN!>[-O!!#7N!!*<am/R/G#jhTl5OAFO
-l;7N!'fiN!>m3O!!#7N!!*Bam/R/J"ml9i5OAFO.M_=N!'fiN!#pIhRK.j
~>
gr
gr

0 sg
2799  684 mt 
(Kernel for  sgsim_cond_3.par) s
4 w
DO
SO
6 w
2843  779 mt 4319  779 L
2843 4223 mt 4319 4223 L
2843  779 mt 2843 4223 L
4319  779 mt 4319 4223 L
2843 4223 mt 4319 4223 L
2843  779 mt 2843 4223 L
2843 4223 mt 2843 4189 L
2843  779 mt 2843  813 L
2810 4369 mt 
(0) s
3405 4223 mt 3405 4189 L
3405  779 mt 3405  813 L
3372 4369 mt 
(2) s
3967 4223 mt 3967 4189 L
3967  779 mt 3967  813 L
3934 4369 mt 
(4) s
2843  779 mt 2877  779 L
4319  779 mt 4284  779 L
2742  823 mt 
(0) s
2843 1341 mt 2877 1341 L
4319 1341 mt 4284 1341 L
2742 1385 mt 
(2) s
2843 1904 mt 2877 1904 L
4319 1904 mt 4284 1904 L
2742 1948 mt 
(4) s
2843 2466 mt 2877 2466 L
4319 2466 mt 4284 2466 L
2742 2510 mt 
(6) s
2843 3028 mt 2877 3028 L
4319 3028 mt 4284 3028 L
2742 3072 mt 
(8) s
2843 3590 mt 2877 3590 L
4319 3590 mt 4284 3590 L
2675 3634 mt 
(10) s
2843 4153 mt 2877 4153 L
4319 4153 mt 4284 4153 L
2675 4197 mt 
(12) s
2843  779 mt 4319  779 L
2843 4223 mt 4319 4223 L
2843  779 mt 2843 4223 L
4319  779 mt 4319 4223 L
1 sg
0 -3446 1477 0 0 3446 4786 778 4 MP
PP
-1477 0 0 -3446 1477 0 0 3446 4786 778 5 MP stroke
gs 4786 778 1478 3447 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    ffffff fafafa f6f6f6 f2f2f2 eeeeee eaeaea e6e6e6 e2e2e2 dedede dadada 
    d6d6d6 d2d2d2 cecece cacaca c6c6c6 c2c2c2 bebebe bababa b6b6b6 b2b2b2 
    aeaeae aaaaaa a5a5a5 a1a1a1 9d9d9d 999999 959595 919191 8d8d8d 898989 
    858585 818181 7d7d7d 797979 757575 717171 6d6d6d 696969 656565 616161 
    5d5d5d 595959 555555 505050 4c4c4c 484848 444444 404040 3c3c3c 383838 
    343434 303030 2c2c2c 282828 242424 202020 1c1c1c 181818 141414 101010 
    0c0c0c 080808 040404 000000 
  >
] setcolorspace } bdef mwscm
gs np 4786 778 mt 0 3447 rl 1477 0 rl 0 -3447 rl cp c np
[1477 0 0 3447 4786 778] cc
<< % Image dictionary
  /ImageType 1
  /Width 21 /Height 49
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [21.000000 0 0 49.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
!!_om!sJl5%JBc%"8i?+!<<*(#5nN%!W3-%"8Dir'E&+8"nM]s59L^N$Ln<($5slk#m^D5!!2cn#n@^`
"pbD;!!!0"#5\B,!=okO#6k25"pOo)r!!T1!!X&H#6b88!!*9."SVm*$5!RJ"p"o4!!!')"p=]%!WilA
rWNB,!!WZ,!!<<-"p4]&$4%(I"9ei2!!!3,r;Zj$#5eH/%1ECB"oni0!!*9,p](a-$jd%<"p"f1!!!')
"Si$-$46t?!<iK("p+c)!X8c(!"&i:#Qt;3"9JQ+"o\K%"8`',!=/u9!X/Q+!rr?+!VcX'":5A;!<iH)
"98E*"Si$,!X/f6"TS`,!<iH'!XAH##m:M=!X/Q.!!*;t!"&c0#7(>5!!WE'#5/$)"9o#6!WrE+!!!0'
p](['!s]#3!s&B*!!!2t!!rZ/"9eu0"98H+o`,:"!sSl2!!N?'"SMg&!<WB,"9SW,!!*5r!!r]/"9nr/
!<W<'p&G@"!s/W/"98N*oDf-u!s8`."98Q*o`,7!!s&K-!Wi?*oDf$r!s8]."S)Ns!WrH)#64nu!!`N*
!WrN-!<_on"p+l-!XA]-o)Jpq!<N?(#Oqct!WrH)"p+8p"Te]+!rrVs!!E?*!!38m!!<9'!<_fk"9AN*
!!;Wi!s/K("7Q9l!<E;j!!*-&mJm:i!!DWh!<N>j!!!)e!!!)f!!!)f!!!%M
~>
gr
gr

0 sg
4743  683 mt 
(Kernel for  sgsim_cond_3.par) s
4 w
DO
SO
6 w
4786  778 mt 6263  778 L
4786 4224 mt 6263 4224 L
4786  778 mt 4786 4224 L
6263  778 mt 6263 4224 L
4786 4224 mt 6263 4224 L
4786  778 mt 4786 4224 L
4786 4224 mt 4786 4190 L
4786  778 mt 4786  812 L
4753 4370 mt 
(0) s
5348 4224 mt 5348 4190 L
5348  778 mt 5348  812 L
5315 4370 mt 
(2) s
5911 4224 mt 5911 4190 L
5911  778 mt 5911  812 L
5878 4370 mt 
(4) s
4786  778 mt 4820  778 L
6263  778 mt 6228  778 L
4685  822 mt 
(0) s
4786 1340 mt 4820 1340 L
6263 1340 mt 6228 1340 L
4685 1384 mt 
(2) s
4786 1903 mt 4820 1903 L
6263 1903 mt 6228 1903 L
4685 1947 mt 
(4) s
4786 2466 mt 4820 2466 L
6263 2466 mt 6228 2466 L
4685 2510 mt 
(6) s
4786 3028 mt 4820 3028 L
6263 3028 mt 6228 3028 L
4685 3072 mt 
(8) s
4786 3591 mt 4820 3591 L
6263 3591 mt 6228 3591 L
4618 3635 mt 
(10) s
4786 4154 mt 4820 4154 L
6263 4154 mt 6228 4154 L
4618 4198 mt 
(12) s
4786  778 mt 6263  778 L
4786 4224 mt 6263 4224 L
4786  778 mt 4786 4224 L
6263  778 mt 6263 4224 L

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
